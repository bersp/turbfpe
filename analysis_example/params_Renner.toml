[rutine]
part0_preanalysis = [
	"calc_and_write_data_stats",
	"calc_and_write_general_autovalues"
]

part1_turbulence_analysis = [
	"calc_turbulence_analysis_autovalues",
	"plot_stationary",
	"plot_pdf",
	"plot_spectrum"
]

[config.io]
save_path = "processed_data/"
save_filenames_prefix = "Renner"

[data]
io.path = "./Renner_8000Hz_filter.npy"  # str.
opts.norm_data = true  # bool. Normalice data with sigma_inf.
opts.flip_data = true  # bool or auto (not implemented yet).
shape = "!auto"

[general]
fs = 8000.0  # float.
nu = 15.32e-6  # float. def: kinematic vistosity.
int_length = 0.0672 # 0.035482826276860564  # float or auto (from preanalysis).
taylor_length = 0.0066  # float or auto (not implemented yet).
kolmogorov_length = "!auto"  # float or auto (from preanalysis).
kolmogorov_time = "!auto"  # float or auto (from preanalysis).
epsilon = "!auto"  # float or auto (from preanalysis). def: mean disipation rate..
taylor_hyp_vel = 2.25  # float or auto (not implemented yet). def: velocity to transform space to time.
nbins = "!auto"  # int or auto (from preanalysis).

[data.stats]
mean = "!auto"
rms = "!auto"
std = "!auto"
skew = "!auto"
kurtosis = "!auto"
range = "!auto"


# ---- PART 1: Turbulence analysis ---- # 
[p1.plot_stationary]
	# uses data and
	data_split_percent = 5  # float from 0 to 100.

[p1.plot_pdf]
	# uses data and
	nbins = "91!auto"  # int or auto (=general.nbins).

[p1.plot_spectrum]
	# uses data, general.fs and
	moving_average_nbins = 3000  # int, auto (=10*general.nbins) or null.
